/*You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).

You have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.
Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [[7,4,1],[8,5,2],[9,6,3]]
Example 2:
Input: matrix = [[5,1,9,11],[2,4,8,10],[13,3,6,7],[15,14,12,16]]
Output: [[15,13,2,5],[14,3,4,1],[12,6,8,9],[16,7,10,11]]*/
class Solution {
    fun rotate(matrix: Array<IntArray>): Unit {
     val n = matrix.size
       for (i in 0..n/2) {        
            for (j in i..n-2-i) {
                val temp = matrix[i][j]
                val temp2 = matrix[j][n-1-i]
                val temp3 = matrix[n-1-i][n-1-j]
                val temp4 = matrix[n-1-j][i] 
                matrix[i][j] = temp4
                matrix[j][n-1-i] = temp
                matrix[n-1-i][n-1-j] = temp2
                matrix[n-1-j][i] = temp3            

            }            
        }
    }
}
