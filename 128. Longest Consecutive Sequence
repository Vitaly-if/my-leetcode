/*Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.
You must write an algorithm that runs in O(n) time.
Example 1:
Input: nums = [100,4,200,1,3,2]
Output: 4
Explanation: The longest consecutive elements sequence is [1, 2, 3, 4]. Therefore its length is 4.
Example 2:
Input: nums = [0,3,7,2,5,8,4,6,0,1]
Output: 9*/
 class Solution {
fun longestConsecutive(nums: IntArray): Int {
    val set = nums.toMutableSet()

    var max = 0

    for (num in nums) {
        var count = 1

        var l = num
        while (--l in set && num in set){
            set.remove(l)
            count++
        }

        var r = num
        while (++r in set && num in set){
            set.remove(r)
            count++
        }

        set.remove(num)

        max = maxOf(max, count)
    }

    return max
}
}
