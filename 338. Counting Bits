/**
Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.

 

Example 1:

Input: n = 2
Output: [0,1,1]
Explanation:
0 --> 0
1 --> 1
2 --> 10
Example 2:

Input: n = 5
Output: [0,1,1,2,1,2]
Explanation:
0 --> 0
1 --> 1
2 --> 10
3 --> 11
4 --> 100
5 --> 101
 **/
 class Solution { //vlad
    fun countBits(n: Int): IntArray {
        var array = IntArray(n+1)
        array[0] = 0
        for (i in 1..n) {
          array[i] = array[i shr 1] + i%2           
    }        
        return array
    }
}
 class Solution { //my
    fun countBits(n: Int): IntArray {
        var array = IntArray(n+1)
        for (i in 0..array.size-1) {
          var num = i     
          var t = 0
          var nums = 0
          while(num!=0)
    {  
                t = num%2;  
                nums = nums + t 
                num = num/2;  
     } 
       array[i] = nums
    }   
        return array
    }
}
